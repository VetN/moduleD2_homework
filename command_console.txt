команда входа: python3 manage.py shell

импорт всего из news.models: from news.models import *

создаем пользователя: назв перем = User.objects.create(username=' ', firs_name=' ')
cсоздаем связь "один к одному" автор-пользователь: Author.objects.create(authorUser= назв перем)
user_1 = User.objects.create(username='Фома', first_name='Иванов')
Author.objects.create(authorUser=user_1)

user_2 = User.objects.create(username='Илана', first_name='Брик')
Author.objects.create(authorUser=user_2)

user_3 = User.objects.create(username='Марина', first_name='Рудакова')
Author.objects.create(authorUser=user_3)

user_4 = User.objects.create(username='Петр', first_name='Юкаев')
Author.objects.create(authorUser=user_4)

user_5 = User.objects.create(username='Маша', first_name='Амела')
Author.objects.create(authorUser=user_5)

создать категории новостей/ статей:
Category.objects.create(name='city')
Category.objects.create(name='children')
Category.objects.create(name='culture')
Category.objects.create(name='education')
Category.objects.create(name='beauty')
Category.objects.create(name='pets')

создаем посты:
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(first_name='Амела')), 
categoryType='AR', title='Our children', content='text about our children')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(first_name='Рудакова')), 
categoryType='NV', title='Events in the city', content='text about weekend in the city')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(first_name='Брик')), 
categoryType='AR', title='Our frinds: pets', content='text about pets in our life')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(first_name='Амела')), 
categoryType='AR', title='Culture in our life', content='text about culture')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(first_name='Иванов')), 
categoryType='AR', title='Beauty', content='text about Spa')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(first_name='Юкаев')), 
categoryType='NW', title='New school', content='text about education our children')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(first_name='Юкаев')), 
categoryType='NW', title='Transport schedule', content='text about transport in the city')

присваиваем категории постам:
1. получаем пост и присваиваем переменную посту
2. получаем категории и присваиваем переменную категории
3. добавляем переменной поста переменную категории
post1 = Post.objects.get(pk=1)
post2 = Post.objects.get(pk=2)
post3 = Post.objects.get(pk=3)
post4 = Post.objects.get(pk=4)
post5 = Post.objects.get(pk=5)
post6 = Post.objects.get(title='Transport schedule')
post7 = Post.objects.get(pk=7)

category1 = Category.objects.get(name='city')
category2 = Category.objects.get(name='children')
category3 = Category.objects.get(name='culture')
category4 = Category.objects.get(name='education')
category5 = Category.objects.get(name='beauty')
category6 = Category.objects.get(name='pets')

post1.postCategory.add(category2)
post2.postCategory.add(category1, category3)
post3.postCategory.add(category6)
post4.postCategory.add(category3, category4)
post5.postCategory.add(category5)
post6.postCategory.add(category1, category2, category4)
post7.postCategory.add(category1)

получаем пользователя и присваиваем ему переменную
создаем комментарий (2 связанных поля commentPost, commintUser)

Comment.objects.create(commentPost = post1, 
commentUser=User.objects.get(first_name='Юкаев'), content='comment post1')

Comment.objects.create(commentPost = post2, 
commentUser=User.objects.get(first_name='Юкаев'), content='comment post2')

Comment.objects.create(commentPost = post5, 
commentUser=User.objects.get(first_name='Юкаев'), content='comment post5')

Comment.objects.create(commentPost = post5, 
commentUser=User.objects.get(first_name='Амела'), content='comment post5')

Comment.objects.create(commentPost = post3, 
commentUser=User.objects.get(first_name='Рудакова'), content='comment post3')

добавляем реакцию на посты
Post.objects.get(pk=7).like()
Post.objects.get(pk=1).like()
Post.objects.get(pk=7).like()
Post.objects.get(pk=7).like()
Post.objects.get(pk=3).like()
Post.objects.get(pk=5).dislike()
Post.objects.get(pk=7).dislike()
или так
post3.like()
post4.dislike()
post1.dislike()

добавляем реакцию на комментарии
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=1).like()
Comment.objects.get(pk=3).like()
Comment.objects.get(pk=2).dislike()
Comment.objects.get(pk=3).dislike()
Comment.objects.get(pk=3).dislike()
Comment.objects.get(pk=5).dislike()
Comment.objects.get(pk=5).dislike()
Comment.objects.get(pk=5).dislike()
Comment.objects.get(pk=3).like()
Comment.objects.get(pk=3).like()
Comment.objects.get(pk=3).like()


Рейтинг пользователей, постов
Author.objects.get(authorUser = User.objects.get(first_name='Иванов')).update_rating()
Author.objects.get(authorUser = User.objects.get(first_name='Брик')).update_rating()
Author.objects.get(authorUser = User.objects.get(first_name='Рудакова')).update_rating()
Author.objects.get(authorUser = User.objects.get(first_name='Юкаев')).update_rating()
Author.objects.get(authorUser = User.objects.get(first_name='Амела')).update_rating()
author1 = Author.objects.get(authorUser = User.objects.get(first_name='Иванов'))
author2 = Author.objects.get(authorUser = User.objects.get(first_name='Брик'))
author3 = Author.objects.get(authorUser = User.objects.get(first_name='Рудакова'))
author4 = Author.objects.get(authorUser = User.objects.get(first_name='Юкаев'))
author5 = Author.objects.get(authorUser = User.objects.get(first_name='Амела'))
author1.ratingAuthor
author2.ratingAuthor
author3.ratingAuthor
author4.ratingAuthor

рейтинг лучший автор
best = Author.objects.all().order_by('-ratingAuthor').values('authorUser', 'ratingAuthor')[0]
print(best) # user 4 rating 10

рейтинг худший автор
worst = Author.objects.all().order_by('-ratingAuthor').values('authorUser', 'ratingAuthor').last()
print(worst) # user 5 rating -9

рейтинг лучший комментарий
bestComment = Comment.objects.all().order_by('-rating').values('commentPost', 'commentUser').first()
>>> print(bestComment) # {'commentPost': 5, 'commentUser': 4}

рейтинг худший комментарий
worstComment = Comment.objects.all().order_by('-rating').values('commentPost', 'commentUser','rating').last()
print(worstComment) # {'commentPost': 7, 'commentUser': 5, 'rating': -3}

рейтинг лучший пост:автор, название,
bestPost = Post.objects.all().order_by('-rating').values('author', 'title', 'postCategory').first()
print(bestPost) # {'author': 4, 'title': 'Transport schedule', 'postCategory': 1, }

комментарий к этому посту
comment_bestPost= Comment.objects.filter(commentPost__id = bestPost.id).values('commentUser__username', 'content')
>>> print(comment_bestPost)
 # <QuerySet [{'commentUser__username': 'Маша', 'content': 'comment post7'}]>

использование функции preview() для лучшего поста
bestPostContent = Post.objects.all().order_by('-rating').first().preview()
print(bestPostContent) # text about transport in the city...

список всех постов
Post.objects.all() #  <QuerySet [<Post: Our children>, <Post: Events in the city>,
 <Post: Our frinds: pets>, <Post: Culture in our life>, 
 <Post: Beauty>, <Post: New school>, <Post: Transport schedule>]>

 список авторов всех комментариев
 Comment.objects.all()
<QuerySet [<Comment: Петр>, <Comment: Петр>, <Comment: Петр>, 
<Comment: Маша>, <Comment: Маша>, <Comment: Марина>]>
Comment.objects.filter(commentPost=post5).values('dateCreation', 'commentUser__username', 'rating', 'content') 
 
 Комментарии автор комментария, к какому посту, текст, рейтинг
 Сomment.objects.all().values('commentUser', 'commentPost', 'content', 'rating')
<QuerySet [
{'commentUser': 4, 'commentPost': 1, 'content': 'comment post1', 'rating': 2}, 
{'commentUser': 4, 'commentPost': 2, 'content': 'comment post2', 'rating': -1}, 
{'commentUser': 4, 'commentPost': 5, 'content': 'comment post5', 'rating': 3}, 
{'commentUser': 5, 'commentPost': 5, 'content': 'comment post5', 'rating': 0}, 
{'commentUser': 5, 'commentPost': 7, 'content': 'comment post7', 'rating': -3}, 
{'commentUser': 3, 'commentPost': 3, 'content': 'comment post3', 'rating': 0}]>

все комментарии конкретного пользователя
Comment.objects.filter(commentUser=4).values('content')
# <QuerySet [{'content': 'comment post1'}, 
{'content': 'comment post2'}, 
{'content': 'comment post5'}]>


